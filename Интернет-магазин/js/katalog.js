
// –ö–∞—Ç–∞–ª–æ–≥

function showCategory(category) {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  document.querySelectorAll('.card').forEach(card => {
    if (category === 'all') {
      card.classList.add('show');
    } else {
      if (card.classList.contains(category)) {
        card.classList.add('show');
      } else {
        card.classList.remove('show');
      }
    });
  }
}

// –û –ù–∞—Å

function toggleAbout() {
  const aboutSection = document.getElementById('aboutSection');

  if (aboutSection.style.display === 'none') {
    aboutSection.style.display = 'block';  // –ò–ª–∏ 'flex', 'grid' ...
  } else {
    aboutSection.style.display = 'none';
  }
  
  // –ö–æ–Ω—Ç–∞–∫—Ç—ã
  
function toggleContacts() {
    const contacts = document.getElementById('contactsList');
    if (contacts.style.display === 'none') {
        contacts.style.display = 'block';
    } else {
        contacts.style.display = 'none';
    }
}

// –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞

const searchInput = document.getElementById('searchInput');
const searchButton = document.getElementById('searchButton');
const cards = document.querySelectorAll('.card');

searchButton.addEventListener('click', performSearch);

searchInput.addEventListener('keyup', (event) => {
  if (event.key === 'Enter') {
    performSearch();
  }
});

function performSearch() {
  const searchTerm = searchInput.value.toLowerCase();

  cards.forEach(card => {
   
    const dataName = card.dataset.name ? card.dataset.name.toLowerCase() : ""; //–ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ data-name

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω–∞ –∏–ª–∏ data-name –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    if (title.includes(searchTerm) || price.includes(searchTerm) || dataName.includes(searchTerm)) {
      card.classList.remove('hidden'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    } else {
      card.classList.add('hidden'); // –°–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    }
  });
}

// –ö–∞—Ä–∑–∏–Ω–∞

    let cart = [];

    function addToCart(name, price) {
      // –ï—Å–ª–∏ —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä –µ—Å—Ç—å, —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      let item = cart.find(x=>x.name===name);
      if (item) {
        item.qty += 1;
      } else {
        cart.push({name, price, qty:1});
      }
      renderCart();
    }

    function removeFromCart(index) {
      cart.splice(index, 1);
      renderCart();
    }

    function renderCart() {
      let out = '';
      if (cart.length === 0) {
        out = '<div class="empty">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ üôÉ</div>';
      } else {
        out = `<table>
          <tr><th>–¢–æ–≤–∞—Ä</th><th>–ö–æ–ª-–≤–æ</th><th>–¶–µ–Ω–∞</th><th></th></tr>`;
        let total = 0;
        cart.forEach((item,idx) => {
          let sum = item.price * item.qty;
          total += sum;
          out += `<tr>
            <td>${item.name}</td>
            <td>${item.qty}</td>
            <td>${sum} ‚ÇΩ</td>
            <td><button class="remove" onclick="removeFromCart(${idx})">‚úñ</button></td>
          </tr>`;
        });
        out += `<tr class="total-row"><td colspan="2">–ò—Ç–æ–≥–æ</td><td colspan="2">${total} ‚ÇΩ</td></tr>`;
        out += '</table>';
      }
      document.getElementById('cart').innerHTML = out;
    }

    // –°–±—Ä–æ—Å –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:
    renderCart();